/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BO.CitaBO;
import DTO.CitaDTO;
import DTO.ConsultaDTO;
import configuracion.DependencyInjector;
import excepciones.NegocioException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Alici
 */
public class FrmRegistrarConsulta extends javax.swing.JFrame {

    private CitaBO citaBO = DependencyInjector.crearCitaBO();
    private CitaDTO cita;

    /**
     * Creates new form FrmRegistrarConsulta
     *
     * @param idCita
     */
    public FrmRegistrarConsulta(CitaDTO cita) {
        initComponents();
        this.cita = cita;
        btnRegistrarConsulta.setEnabled(false);
        lblEdad.setText(cita.getPacienteSimpleDTO().getEdad());
        lblPaciente.setText(cita.getPacienteSimpleDTO().toString());
        inicializarCampos();
        agregarListeners();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new GUI.PanelRound();
        lblConsultaTitulo = new javax.swing.JLabel();
        lblFolio = new javax.swing.JLabel();
        txtFolio = new javax.swing.JTextField();
        btnValidarFolio = new javax.swing.JButton();
        lblPacienteTitulo = new javax.swing.JLabel();
        lblEdadTitulo = new javax.swing.JLabel();
        lblPaciente = new javax.swing.JLabel();
        lblEdad = new javax.swing.JLabel();
        lblDiagnostico = new javax.swing.JLabel();
        lblObservaciones = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaObservaciones = new javax.swing.JTextArea();
        lblTratamiento = new javax.swing.JLabel();
        txtDiagnostico = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaTratamiento = new javax.swing.JTextArea();
        btnRegistrarConsulta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(241, 243, 245));
        setResizable(false);

        panelRound1.setBackground(new java.awt.Color(255, 255, 255));
        panelRound1.setRoundBottomLeft(30);
        panelRound1.setRoundBottomRight(30);
        panelRound1.setRoundTopLeft(30);
        panelRound1.setRoundTopRight(30);

        lblConsultaTitulo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblConsultaTitulo.setText("Consulta");

        lblFolio.setText("Folio de consulta:");

        btnValidarFolio.setBackground(new java.awt.Color(128, 204, 43));
        btnValidarFolio.setForeground(new java.awt.Color(255, 255, 255));
        btnValidarFolio.setText("Validar folio");
        btnValidarFolio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarFolioActionPerformed(evt);
            }
        });

        lblPacienteTitulo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPacienteTitulo.setText("Paciente:");

        lblEdadTitulo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEdadTitulo.setText("Edad:");

        lblDiagnostico.setText("Diagn√≥stico");

        lblObservaciones.setText("Observaciones");

        txtAreaObservaciones.setColumns(20);
        txtAreaObservaciones.setRows(5);
        jScrollPane2.setViewportView(txtAreaObservaciones);

        lblTratamiento.setText("Tratamiento");

        txtAreaTratamiento.setColumns(20);
        txtAreaTratamiento.setRows(5);
        jScrollPane3.setViewportView(txtAreaTratamiento);

        btnRegistrarConsulta.setBackground(new java.awt.Color(30, 98, 159));
        btnRegistrarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrarConsulta.setText("Registrar consulta");
        btnRegistrarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound1Layout = new javax.swing.GroupLayout(panelRound1);
        panelRound1.setLayout(panelRound1Layout);
        panelRound1Layout.setHorizontalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addComponent(lblConsultaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(344, 344, 344)
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelRound1Layout.createSequentialGroup()
                                .addComponent(lblFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound1Layout.createSequentialGroup()
                                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelRound1Layout.createSequentialGroup()
                                        .addComponent(lblEdadTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 26, Short.MAX_VALUE))
                                    .addComponent(txtFolio))
                                .addGap(18, 18, 18)
                                .addComponent(btnValidarFolio)
                                .addGap(34, 34, 34))))
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelRound1Layout.createSequentialGroup()
                                .addComponent(lblPacienteTitulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(panelRound1Layout.createSequentialGroup()
                        .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblObservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                            .addComponent(lblTratamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiagnostico)
                            .addComponent(jScrollPane3)
                            .addComponent(btnRegistrarConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelRound1Layout.setVerticalGroup(
            panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConsultaTitulo)
                    .addComponent(lblFolio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFolio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnValidarFolio))
                .addGap(23, 23, 23)
                .addGroup(panelRound1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEdadTitulo)
                    .addComponent(lblPacienteTitulo)
                    .addComponent(lblPaciente)
                    .addComponent(lblEdad))
                .addGap(30, 30, 30)
                .addComponent(lblDiagnostico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblObservaciones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTratamiento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(btnRegistrarConsulta)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnValidarFolioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarFolioActionPerformed
        validarFolio();
    }//GEN-LAST:event_btnValidarFolioActionPerformed

    private void btnRegistrarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarConsultaActionPerformed
        registrarConsulta();
    }//GEN-LAST:event_btnRegistrarConsultaActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FrmRegistrarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FrmRegistrarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FrmRegistrarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FrmRegistrarConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FrmRegistrarConsulta().setVisible(true);
//            }
//        });
//    }
   
    /**
    * M√©todo para registrar una consulta m√©dica.
    * Recoge los datos de la consulta e intenta registrarlos en la base de datos.
    */
    private void registrarConsulta() {
        ConsultaDTO consulta = new ConsultaDTO(txtDiagnostico.getText(), txtAreaTratamiento.getText(), txtAreaObservaciones.getText(), cita.getIDCita());
        try {
            if (citaBO.registrarConsulta(consulta)) {
                JOptionPane.showMessageDialog(this, "Se ha registrado la consulta exitosamente", "Consulta registrada", JOptionPane.INFORMATION_MESSAGE);
                FrmCitasMedico frmCitasMedico = new FrmCitasMedico();
                frmCitasMedico.setVisible(true);
                dispose();
                return;
            }
            JOptionPane.showMessageDialog(this, "No fue posible registrar la consulta", "Error al registrar consulta", JOptionPane.INFORMATION_MESSAGE);

        } catch (NegocioException ex) {
            Logger.getLogger(FrmRegistrarConsulta.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Ha ocurrido un error al intentar realizar la consulta", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
    * Inicializa los campos del formulario seg√∫n el tipo de cita.
    * Si la cita es "previa", desactiva el bot√≥n de validaci√≥n de folio y el campo de folio, y actualiza la cita.
    * Si no es "previa", desactiva los campos de diagn√≥stico, tratamiento y observaciones.
    * 
    * Muestra un mensaje si ocurre un error al actualizar la cita.
    */
    private void inicializarCampos() {
        if (cita.getTipo().equals("previa")) {
            btnValidarFolio.setEnabled(false);
            txtFolio.setEnabled(false);
            try {
                citaBO.actualizarCitaPorId(cita.getIDCita());
            } catch (NegocioException ex) {
                Logger.getLogger(FrmRegistrarConsulta.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Ha ocurrido un error al intentar atender la cita", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            txtAreaObservaciones.setEnabled(false);
            txtAreaTratamiento.setEnabled(false);
            txtDiagnostico.setEnabled(false);
        }
    }
    /**
    * Actualiza el estado del bot√≥n de registrar consulta seg√∫n si los campos de diagn√≥stico, tratamiento y observaciones est√°n completos.
    * Si todos los campos est√°n llenos, habilita el bot√≥n.
    */
    private void actualizarEstadoBoton() {
        boolean camposLlenos = !txtDiagnostico.getText().trim().isEmpty()
                && !txtAreaTratamiento.getText().trim().isEmpty()
                && !txtAreaObservaciones.getText().trim().isEmpty();
        btnRegistrarConsulta.setEnabled(camposLlenos);
    }
    /**
    * Valida el folio ingresado. Si coincide con el de la cita, habilita los campos para registrar la consulta.
    * Si no coincide, muestra un mensaje de error.
    */
    private void validarFolio() {
        if (txtFolio.getText().equals(cita.getFolioCita())) {
            txtFolio.setEnabled(false);
            btnValidarFolio.setEnabled(false);
            try {
                citaBO.actualizarCitaPorId(cita.getIDCita());
                txtDiagnostico.setEnabled(true);
                txtAreaTratamiento.setEnabled(true);
                txtAreaObservaciones.setEnabled(true);
            } catch (NegocioException ex) {
                Logger.getLogger(FrmRegistrarConsulta.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Ha ocurrido un error al intentar atender la cita", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "El folio ingresado no coincide con el asociado a la consulta", "Folio incorrecto", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
    * Agrega listeners a los campos de texto para actualizar el estado del bot√≥n de registro 
    * cuando se modifiquen los campos de diagn√≥stico, observaciones, tratamiento o folio.
    */
    private void agregarListeners() {
        DocumentListener listener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                actualizarEstadoBoton();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                actualizarEstadoBoton();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                actualizarEstadoBoton();
            }
        };
        txtDiagnostico.getDocument().addDocumentListener(listener);
        txtAreaObservaciones.getDocument().addDocumentListener(listener);
        txtAreaTratamiento.getDocument().addDocumentListener(listener);
        txtFolio.getDocument().addDocumentListener(listener);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrarConsulta;
    private javax.swing.JButton btnValidarFolio;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblConsultaTitulo;
    private javax.swing.JLabel lblDiagnostico;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblEdadTitulo;
    private javax.swing.JLabel lblFolio;
    private javax.swing.JLabel lblObservaciones;
    private javax.swing.JLabel lblPaciente;
    private javax.swing.JLabel lblPacienteTitulo;
    private javax.swing.JLabel lblTratamiento;
    private GUI.PanelRound panelRound1;
    private javax.swing.JTextArea txtAreaObservaciones;
    private javax.swing.JTextArea txtAreaTratamiento;
    private javax.swing.JTextField txtDiagnostico;
    private javax.swing.JTextField txtFolio;
    // End of variables declaration//GEN-END:variables
}
